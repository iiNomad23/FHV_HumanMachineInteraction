
@article{harman_well-wrought_2012,
	title = {The Well-Wrought Broken Hammer: Object-Oriented Literary Criticism},
	volume = {43},
	issn = {1080-661X},
	url = {https://muse.jhu.edu/pub/1/article/483016},
	doi = {10.1353/nlh.2012.0016},
	shorttitle = {The Well-Wrought Broken Hammer},
	abstract = {This article sketches the outlines of an object-oriented literary criticism, contrasting it with several familiar critical schools. We begin with a summary of two new philosophical trends: speculative realism and object-oriented philosophy. The latter approach offers new arguments for the autonomy of objects from their relations, and allows us to consider whether various approaches to literature do justice to this autonomy. The New Criticism insists on the independence of the text, but only at the price of destroying the independence of its internal elements, due to its excessively holistic vision of the textual interior. New Historicism famously embeds the text in its cultural and material surroundings, thereby over-relationizing it, which is found to be philosophically untenable. Deconstruction leads to similar difficulties through its misinterpretation of identity as a form of presence, thereby disallowing any independence of things. In closing, some suggestions are offered for new methods of criticism capable of living up to the unity and autonomy of both the text and its internal elements.},
	pages = {183--203},
	number = {2},
	journaltitle = {New Literary History},
	author = {Harman, Graham},
	urldate = {2023-02-10},
	date = {2012},
	note = {Publisher: Johns Hopkins University Press},
}

@book{wengrow_common-sense_2020,
	location = {Raleigh, North Carolina},
	edition = {2nd edition},
	title = {A Common-Sense Guide to Data Structures and Algorithms: Level Up Your Core Programming Skills},
	isbn = {978-1-68050-722-5},
	shorttitle = {A Common-Sense Guide to Data Structures and Algorithms},
	abstract = {Algorithms and data structures are much more than abstract concepts. Mastering them enables you to write code that runs faster and more efficiently, which is particularly important for today\&\#226;\&;\&;s web and mobile apps. Take a practical approach to data structures and algorithms, with techniques and real-world scenarios that you can use in your daily production code, with examples in {JavaScript}, Python, and Ruby. This new and revised second edition features new chapters on recursion, dynamic programming, and using Big O in your daily work.Use Big O notation to measure and articulate the efficiency of your code, and modify your algorithm to make it faster. Find out how your choice of arrays, linked lists, and hash tables can dramatically affect the code you write. Use recursion to solve tricky problems and create algorithms that run exponentially faster than the alternatives. Dig into advanced data structures such as binary trees and graphs to help scale specialized applications such as social networks and mapping software. You\&\#226;\&;\&;ll even encounter a single keyword that can give your code a turbo boost. Practice your new skills with exercises in every chapter, along with detailed solutions.Use these techniques today to make your code faster and more scalable.},
	pagetotal = {481},
	publisher = {O'Reilly Media},
	author = {Wengrow, Jay},
	date = {2020-09-01},
}

@online{atlassian_unterschiedlichen_nodate,
	title = {Die unterschiedlichen Arten von Softwaretests},
	url = {https://www.atlassian.com/de/continuous-delivery/software-testing/types-of-software-testing},
	abstract = {Hier findest du einen Vergleich zwischen verschiedenen Arten von Softwaretests, beispielsweise Unit-Tests, Integrationstests, Funktionstests und Akzeptanztests.},
	titleaddon = {Atlassian},
	author = {Atlassian},
	urldate = {2023-04-15},
	langid = {german},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\UKPFQCDV\\types-of-software-testing.html:text/html},
}

@online{noauthor_software_nodate,
	title = {Software Testing/Qualitätssicherung - Alle Methoden und Tools},
	url = {https://q-centric.com/},
	abstract = {Softwaretest-Methoden sind die verschiedenen Ansätze und Wege, um sicherzustellen, dass insbesondere eine Softwareanwendung vollständig getestet wird. Softwaretestmethoden umfassen alles vom Unit-Test einzelner Module über Integrationstests eines gesamten Systems bis hin zu speziellen Testformen wie Sicherheit und Leistung.},
	titleaddon = {Software Testing/Qualitätssicherung - Alle Methoden und Tools},
	urldate = {2023-04-15},
	langid = {german},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\B4T83UYZ\\software-qualitaetssicherung-alle-methoden-und-tools.html:text/html},
}

@online{noauthor_testrail_2023,
	title = {{TestRail} – Orchestrate Testing. Elevate Quality.},
	url = {https://www.testrail.com/},
	abstract = {{TestRail} is a test management platform that helps you streamline your software testing processes, get visibility into {QA}, and release high-quality software.},
	urldate = {2023-04-17},
	date = {2023-01-25},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\HUCVHBNI\\www.testrail.com.html:text/html},
}

@online{noauthor_zephyr_nodate,
	title = {Zephyr Test Management Products {\textbar} {SmartBear}},
	url = {https://smartbear.com/test-management/zephyr/},
	urldate = {2023-04-17},
	file = {Zephyr Test Management Products | SmartBear:C\:\\Users\\marco\\Zotero\\storage\\H6QPJ7XJ\\zephyr.html:text/html},
}

@online{noauthor_kiwi_nodate,
	title = {Kiwi {TCMS} - the leading open source test management system},
	url = {https://kiwitcms.org/},
	urldate = {2023-04-17},
	file = {Kiwi TCMS - the leading open source test management system:C\:\\Users\\marco\\Zotero\\storage\\DUKMCXNC\\kiwitcms.org.html:text/html},
}

@online{noauthor_7_nodate,
	title = {7 Best Test Management Tools},
	url = {https://www.practitest.com/test-management-tools/},
	abstract = {Top 7 {QA} Test Management Tools of 2023 - pros, cons and main features for the most recommended Test Case Management Tools},
	urldate = {2023-04-18},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\SMKE7CY4\\test-management-tools.html:text/html},
}

@online{noauthor_tricentis_nodate,
	title = {Tricentis {qTest} for Unified Test Management},
	url = {https://www.tricentis.com/products/unified-test-management-qtest/},
	abstract = {The world’s \#1 software testing and test automation platform for unified test management across exploratory testing, manual testing, and more.},
	titleaddon = {Tricentis},
	urldate = {2023-04-18},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\GG3CI8QV\\unified-test-management-qtest.html:text/html},
}

@online{kimmy_various_2022,
	title = {The Various Aspects Of Test Management {\textbar} kyinbridges.com},
	url = {https://www.kyinbridges.com/the-various-aspects-of-test-management/},
	author = {{Kimmy}},
	urldate = {2023-04-18},
	date = {2022-11-06},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\GH6WQ2K5\\the-various-aspects-of-test-management.html:text/html},
}

@online{noauthor_test_2023,
	title = {Test Management Tutorial: An Ultimate Guide To Test Management},
	url = {https://www.softwaretestinghelp.com/test-management-tutorial/},
	shorttitle = {Test Management Tutorial},
	abstract = {This is a Complete Guide to Test Management in Software Testing. It includes Test Management Phases, Tools and Test Management Vs Organizational Structure.},
	titleaddon = {Software Testing Help},
	urldate = {2023-04-18},
	date = {2023-03-24},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\SE4GDERS\\test-management-tutorial.html:text/html},
}

@book{atar_hands-test_2019,
	title = {Hands-On Test Management with Jira: End-to-end test management with Zephyr, {synapseRT}, and Jenkins in Jira},
	isbn = {978-1-78995-487-6},
	shorttitle = {Hands-On Test Management with Jira},
	abstract = {Learn best practices for testing with Jira and model industry workflows that can be used during the software development {lifecycleKey} {FeaturesIntegrate} Jira with test management tools such as Zephyr, Test Management, and {SynapseRTUnderstand} test case management, traceability, and test execution with {reportsImplement} continuous integration using Jira, Jenkins, and automated testing {toolsBook} {DescriptionHands}-On Test Management with Jira begins by introducing you to the basic concepts of Jira and takes you through real-world software testing processes followed by various organizations. As you progress through the chapters, the book explores and compares the three most popular Jira plugins—Zephyr, Test Management, and {synapseRT}. With this book, you’ll gain a practical understanding of test management processes using Jira. You’ll learn how to create and manage projects, create Jira tickets to manage customer requirements, and track Jira tickets. You’ll also understand how to develop test plans, test cases, and test suites, and create defects and requirement traceability matrices, as well as generating reports in Jira. Toward the end, you’ll understand how Jira can help the {SQA} teams to use the {DevOps} pipeline for automating execution and managing test cases. You’ll get to grips with configuring Jira with Jenkins to execute automated test cases in Selenium. By the end of this book, you’ll have gained a clear understanding of how to model and implement test management processes using Jira.What you will {learnUnderstand} {QMS} to effectively implement quality systems in your {organizationExplore} a business-driven structured approach to Test Management using {TMap} {NEXTImplement} different aspects of test planning, test strategy, and test execution Organize and manage Agile projects in Scrum and {KanbanUncover} Jira plugins available in the Atlassian Marketplace for testing and project {managementConfigure} a {DevOps} pipeline for continuous integration using Jira with {JenkinsWho} this book is {forIf} you’re a quality assurance professional, software project manager, or test manager interested in learning test management best practices in your team or organization, this book is for you. Prior knowledge of test management and Jenkins will be beneficial in understanding the concepts covered in this book.},
	pagetotal = {250},
	publisher = {Packt Publishing Ltd},
	author = {Atar, Afsana},
	date = {2019-02-19},
	langid = {english},
	note = {Google-Books-{ID}: R\_KIDwAAQBAJ},
	keywords = {Computers / Buyer's Guides, Computers / General, Computers / Hardware / General, Reference / Consumer Guides, Science / Life Sciences / Biology},
}

@online{noauthor_top_2022,
	title = {Top 25 Test Management Tools Of 2023 (December 2022 Updated)},
	url = {https://www.qatouch.com/blog/top-25-test-management-tools/},
	abstract = {List of best test management tools - 1.{QA} Touch 2.{PractiTest} 3.{TestRail} 4.Tuskr 5.{TestMo} 6.Testpad 7.Zephyr 8.Xray 9.Panaya 10.{JunoOne} and more.},
	urldate = {2023-04-18},
	date = {2022-12-28},
	langid = {american},
	note = {Section: Test Management Tools},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\X7K8ZJHA\\top-25-test-management-tools.html:text/html},
}

@online{lead_articles_nodate,
	title = {Articles Archives},
	url = {https://theqalead.com/topics/},
	titleaddon = {The {QA} Lead},
	author = {Lead, The {QA}},
	urldate = {2023-04-19},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\YZWPQR3M\\topics.html:text/html},
}

@online{billwagner_net_nodate,
	title = {.{NET} documentation},
	url = {https://learn.microsoft.com/en-us/dotnet/},
	abstract = {Learn to use .{NET} to create applications on any platform using C\#, F\#, and Visual Basic. Browse {API} reference, sample code, tutorials, and more.},
	author = {{BillWagner}},
	urldate = {2023-04-19},
	langid = {english},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\LRB2I93D\\dotnet.html:text/html},
}

@online{noauthor_mariadb_nodate,
	title = {{MariaDB} documentation},
	url = {https://mariadb.org/documentation/},
	abstract = {As {MariaDB} Server (and its predecessor {MySQL}) has been used around the world for over 20 years, there are huge amounts of learning resources and documentation available. … Continue reading "Documentation"},
	titleaddon = {{MariaDB}.org},
	urldate = {2023-04-19},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\2ZI3P6L8\\documentation.html:text/html},
}

@online{noauthor_openapi_nodate,
	title = {{OpenAPI}},
	url = {https://www.openapis.org/},
	titleaddon = {{OpenAPI} Initiative},
	urldate = {2023-04-19},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\4CUT3MD4\\www.openapis.org.html:text/html},
}

@online{noauthor_openapi_nodate-1,
	title = {{OpenAPI} Generator},
	url = {https://openapi-generator.tech/},
	abstract = {Description will go into a meta tag in {\textless}head /{\textgreater}},
	urldate = {2023-04-19},
	langid = {english},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\CW6FK8IQ\\openapi-generator.tech.html:text/html},
}

@online{noauthor_swagger_nodate,
	title = {Swagger},
	url = {https://swagger.io/},
	urldate = {2023-04-19},
	file = {API Documentation & Design Tools for Teams | Swagger:C\:\\Users\\marco\\Zotero\\storage\\LTVT3CRT\\swagger.io.html:text/html},
}

@online{khandelwal_difference_2019,
	title = {Difference between Black Box and White Box Testing {\textbar} Testing Types},
	url = {https://testinggenez.com/black-box-and-white-box-testing/},
	abstract = {Applications are facing a huge amount of challenge because of security. Know the difference between black box and white box testing for the right activity.},
	titleaddon = {{TestingGenez}},
	author = {Khandelwal, Abhik},
	urldate = {2023-05-01},
	date = {2019-10-12},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\7UGNHV7F\\black-box-and-white-box-testing.html:text/html},
}

@online{noauthor_test-driven_nodate,
	title = {Test-driven development - {IBM} Garage Practices},
	url = {https://www.ibm.com/garage/method/practices/code/practice_test_driven_development/},
	abstract = {Test-driven development ({TDD}) is about innovating faster and reducing waste. It starts with writing a failing test case and then creating just enough code to pass the test.},
	urldate = {2023-05-01},
	langid = {english},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\MTBMRQSM\\practice_test_driven_development.html:text/html},
}

@article{nidhra_black_2012,
	title = {{BLACK} {BOX} {AND} {WHITE} {BOX} {TESTING} {TECHNIQUES} -A {LITERATURE} {REVIEW}},
	url = {https://www.scinapse.io/papers/2334860424},
	doi = {10.5121/ijesa.2012.2204},
	abstract = {There are several methods for automatic test case generation has been proposed in the past. But most of these},
	journaltitle = {International journal of embedded systems and applications},
	author = {Nidhra, Srinivas and Dondeti, Jagruthi},
	urldate = {2023-05-01},
	date = {2012-06-30},
	langid = {english},
	file = {Full Text:C\:\\Users\\marco\\Zotero\\storage\\884SER57\\Nidhra and Dondeti - 2012 - BLACK BOX AND WHITE BOX TESTING TECHNIQUES -A LITE.pdf:application/pdf},
}

@book{ammann_introduction_2016,
	title = {Introduction to Software Testing},
	isbn = {978-1-316-77312-3},
	abstract = {This extensively classroom-tested text takes an innovative approach to explaining software testing that defines it as the process of applying a few precise, general-purpose criteria to a structure or model of the software. The book incorporates cutting-edge developments, including techniques to test modern types of software such as {OO}, web applications, and embedded software. This revised second edition significantly expands coverage of the basics, thoroughly discussing test automaton frameworks, and it adds new, improved examples and numerous exercises. The theory of coverage criteria is carefully and cleanly explained to help students understand concepts before delving into practical applications, while extensive use of the {JUnit} test framework gives students practical experience in a test framework popular in the industry. Exercises, meanwhile, feature specifically tailored tools that allow students to check their own work. The book's website also offers an instructor's manual, {PowerPoint} slides, testing tools for students, and example software programs in Java.},
	pagetotal = {367},
	publisher = {Cambridge University Press},
	author = {Ammann, Paul and Offutt, Jeff},
	date = {2016-12-13},
	langid = {english},
	note = {Google-Books-{ID}: 58LeDQAAQBAJ},
	keywords = {Computers / Software Development \& Engineering / General},
}

@book{rubin_essential_2012,
	title = {Essential Scrum: A Practical Guide to the Most Popular Agile Process},
	isbn = {978-0-13-704329-3},
	shorttitle = {Essential Scrum},
	abstract = {A Practical Guide to the Most Popular Agile Process     The Single-Source, Comprehensive Guide to Scrum for All Team Members, Managers, and Executives    If you want to use Scrum to develop innovative products and services that delight your customers,   Essential Scrum   is the complete, single-source reference you've been searching for. Leading Scrum coach and trainer Kenny Rubin illuminates the values, principles, and practices of Scrum, and describes flexible, proven approaches that can help you implement it far more effectively.   Whether you are new to Scrum or years into your use, this book will introduce, clarify, and deepen your Scrum knowledge at the team, product, and portfolio levels. Drawing from Rubin's experience helping hundreds of organizations succeed with Scrum, this book provides easy-to-digest descriptions enhanced by more than two hundred illustrations based on an entirely new visual icon language for describing Scrum's roles, artifacts, and activities.     Essential Scrum   will provide every team member, manager, and executive with a common understanding of Scrum, a shared vocabulary they can use in applying it, and practical knowledge for deriving maximum value from it.},
	pagetotal = {501},
	publisher = {Addison-Wesley Professional},
	author = {Rubin, Kenneth S.},
	date = {2012},
	langid = {english},
	note = {Google-Books-{ID}: {HkXX}65VCZU4C},
	keywords = {Computers / Software Development \& Engineering / General, Business \& Economics / Project Management},
}

@book{ghosh_docker_2020,
	title = {Docker Demystified: Learn How to Develop and Deploy Applications Using Docker},
	isbn = {978-93-89845-87-7},
	shorttitle = {Docker Demystified},
	abstract = {Build robust and secure applications using the building blocks of {DockerKey} Features\_ Understand the fundamentals of Containers.\_ Understand the working of the entire Docker ecosystem.\_ Learn how to utilize Docker Networking capabilities to its fullest.\_ Learn how to secure Docker Containers.\_ Get familiar and work with Docker Enterprise Edition.{DescriptionThe} book starts by introducing Containers and explains how they are different from virtual machines, and why they are the preferred tool for developing applications. You will understand the working of Images, Containers, and their associated Storage and will see how all the moving parts bind together to work synchronously.The book will then focus on Docker Swarm, the mechanism for orchestrating several running Docker containers. It then delves deeper into Docker Networking. Towards the end, you will learn how to secure your applications, especially by leveraging the native features of Docker Enterprise Edition.What will you learn\_ Learn how to use Docker Images.\_ Get to know more about Docker Storage.\_ Learn how to use Volume plugins in Docker services.\_ Learn how to deploy a service to the Swarm.\_ Learn how to manage, scale, and maintain containerized applications.Who this book is {forThis} book is for anyone who is looking to learn Docker. It is also useful for professionals who are looking to build and deploy web apps using Docker.Table of Contents1. Introduction to Containerization and Docker2. Containers and Images3. Storage Drivers and Volumes4. The Container Network Model and the Docker Bridge5. Docker Swarm6. Docker Networking7. Docker Security-18. Docker Security-{II}},
	pagetotal = {243},
	publisher = {{BPB} Publications},
	author = {Ghosh, Saibal},
	date = {2020-10-03},
	langid = {english},
	note = {Google-Books-{ID}: 650AEAAAQBAJ},
	keywords = {Computers / General, Computers / Distributed Systems / Cloud Computing, Computers / Information Technology},
}

@book{richards_fundamentals_2020,
	title = {Fundamentals of Software Architecture: An Engineering Approach},
	isbn = {978-1-4920-4342-3},
	shorttitle = {Fundamentals of Software Architecture},
	abstract = {Salary surveys worldwide regularly place software architect in the top 10 best jobs, yet no real guide exists to help developers become architects. Until now. This book provides the first comprehensive overview of software architecture’s many aspects. Aspiring and existing architects alike will examine architectural characteristics, architectural patterns, component determination, diagramming and presenting architecture, evolutionary architecture, and many other topics.Mark Richards and Neal Ford—hands-on practitioners who have taught software architecture classes professionally for years—focus on architecture principles that apply across all technology stacks. You’ll explore software architecture in a modern light, taking into account all the innovations of the past decade.This book examines:Architecture patterns: The technical basis for many architectural {decisionsComponents}: Identification, coupling, cohesion, partitioning, and {granularitySoft} skills: Effective team management, meetings, negotiation, presentations, and {moreModernity}: Engineering practices and operational approaches that have changed radically in the past few {yearsArchitecture} as an engineering discipline: Repeatable results, metrics, and concrete valuations that add rigor to software architecture},
	pagetotal = {422},
	publisher = {"O'Reilly Media, Inc."},
	author = {Richards, Mark and Ford, Neal},
	date = {2020-01-28},
	langid = {english},
	note = {Google-Books-{ID}: xa7MDwAAQBAJ},
	keywords = {Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Systems Analysis \& Design, Computers / Software Development \& Engineering / Tools, Computers / Systems Architecture / Distributed Systems \& Computing},
}

@book{vernon_implementing_2013,
	title = {Implementing Domain-Driven Design},
	isbn = {978-0-13-303988-7},
	abstract = {“For software developers of all experience levels looking to improve their results, and design and implement domain-driven enterprise applications consistently with the best current state of professional practice,  Implementing Domain-Driven Design  will impart a treasure trove of knowledge hard won within the {DDD} and enterprise application architecture communities over the last couple decades.” –Randy Stafford, Architect At-Large, Oracle Coherence Product Development   “This book is a must-read for anybody looking to put {DDD} into practice.” –Udi Dahan, Founder of {NServiceBus}       Implementing Domain-Driven Design  presents a top-down approach to understanding domain-driven design ({DDD}) in a way that fluently connects strategic patterns to fundamental tactical programming tools. Vaughn Vernon couples guided approaches to implementation with modern architectures, highlighting the importance and value of focusing on the business domain while balancing technical considerations.   Building on Eric Evans’ seminal book, Domain-Driven Design, the author presents practical {DDD} techniques through examples from familiar domains. Each principle is backed up by realistic Java examples–all applicable to C\# developers–and all content is tied together by a single case study: the delivery of a large-scale Scrum-based {SaaS} system for a multitenant environment.   The author takes you far beyond “{DDD}-lite” approaches that embrace {DDD} solely as a technical toolset, and shows you how to fully leverage {DDD}’s “strategic design patterns” using Bounded Context, Context Maps, and the Ubiquitous Language. Using these techniques and examples, you can reduce time to market and improve quality, as you build software that is more flexible, more scalable, and more tightly aligned to business goals.   Coverage includes  Getting started the right way with {DDD}, so you can rapidly gain value from it Using {DDD} within diverse architectures, including Hexagonal, {SOA}, {REST}, {CQRS}, Event-Driven, and Fabric/Grid-Based Appropriately designing and applying Entities–and learning when to use Value Objects instead Mastering {DDD}’s powerful new Domain Events technique Designing Repositories for {ORM}, {NoSQL}, and other databases},
	pagetotal = {656},
	publisher = {Addison-Wesley},
	author = {Vernon, Vaughn},
	date = {2013-02-06},
	langid = {english},
	note = {Google-Books-{ID}: X7DpD5g3VP8C},
	keywords = {Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Systems Analysis \& Design},
}

@online{noauthor_docker_2022,
	title = {Docker: Accelerated, Containerized Application Development},
	url = {https://www.docker.com/},
	shorttitle = {Docker},
	abstract = {Docker is a platform designed to help developers build, share, and run modern applications. We handle the tedious setup, so you can focus on the code.},
	urldate = {2023-05-01},
	date = {2022-05-10},
	langid = {american},
}

@online{noauthor_techempower_nodate,
	title = {{TechEmpower} Web Framework Performance Comparison},
	url = {https://www.techempower.com/benchmarks/#section=data-r21&hw=ph&test=plaintext},
	abstract = {Performance comparison of a wide spectrum of web application frameworks and platforms using community-contributed test implementations.},
	titleaddon = {www.techempower.com},
	urldate = {2023-05-01},
	langid = {english},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\7A7WGTB6\\benchmarks.html:text/html},
}

@online{bollhoff_kubernetes_2022,
	title = {Kubernetes vs Docker: eine Kooperation statt Konkurrenz},
	url = {https://kruschecompany.com/de/kubernetes-vs-docker/},
	shorttitle = {Kubernetes vs Docker},
	abstract = {Kubernetes und Docker haben sich zu den Standard-Tools für Cloud-Container-Anwendungen entwickelt},
	author = {Böllhoff, Patrick},
	urldate = {2023-05-05},
	date = {2022-01-06},
	langid = {german},
	note = {Section: {DevOps}},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\4P8NBWF7\\kubernetes-vs-docker.html:text/html},
}

@online{alliance_what_2017,
	title = {What is a Minimum Viable Product ({MVP})?},
	url = {https://www.agilealliance.org/glossary/mvp/},
	abstract = {A Minimum Viable Product is the "version of a new product which allows a team to collect the maximum amount of validated learning about customers with the least effort."},
	titleaddon = {Agile Alliance {\textbar}},
	author = {Alliance, Agile},
	urldate = {2023-05-05},
	date = {2017-06-27},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\5QL8HJVY\\mvp.html:text/html},
}

@online{noauthor_api_nodate,
	title = {{API} Documentation \& Design Tools for Teams {\textbar} Swagger},
	url = {https://swagger.io/},
	urldate = {2023-05-05},
	file = {API Documentation & Design Tools for Teams | Swagger:C\:\\Users\\marco\\Zotero\\storage\\HGNT2Y5E\\swagger.io.html:text/html},
}

@online{noauthor_host_nodate,
	title = {Host the Swagger {UI} for your {BC} {OpenAPI} spec in your {BC} container},
	url = {https://tobiasfenster.io/host-the-swagger-ui-for-your-bc-openapi-spec-in-your-bc-container},
	urldate = {2023-05-05},
	file = {Host the Swagger UI for your BC OpenAPI spec in your BC container:C\:\\Users\\marco\\Zotero\\storage\\FG8T7ZH3\\host-the-swagger-ui-for-your-bc-openapi-spec-in-your-bc-container.html:text/html},
}

@online{zhang_domain_nodate,
	title = {Domain Driven Design implemented by functional programming},
	url = {https://www.thoughtworks.com/insights/blog/microservices/ddd-implemented-fp},
	abstract = {Usually, Object Oriented programming languages are the go-to choice to implement Domain Driven Design, but functional programming can also help you do that both elegantly and concisely. Read this article to find out more.},
	titleaddon = {Thoughtworks},
	author = {Zhang, Yang},
	urldate = {2023-05-06},
	langid = {english},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\WTIN2ELY\\ddd-implemented-fp.html:text/html},
}

@article{westland_cost_2002,
	title = {The cost of errors in software development: evidence from industry},
	volume = {62},
	issn = {0164-1212},
	url = {https://doi.org/10.1016/S0164-1212(01)00130-3},
	doi = {10.1016/S0164-1212(01)00130-3},
	shorttitle = {The cost of errors in software development},
	abstract = {The search for and correction of errors in software are often time consuming and expensive components of the total cost of software development. The current research investigates to what extent these costs of software error detection and correction contribute to the total cost of software. We initiated the research reported here with the collection of a sample of transactions recording progress on one phase of development of a set of software programs. Each of these projects represented the completion of an identical phase of development (i.e., country localisation) for a different country. This enabled each project to be compared with the other, and provided an unusually high degree of control over the data collection and analysis in real-world empirical study. The research findings relied on programmers' self-assessment of the severity of errors discovered. It found that serious errors have less influence on total cost than errors that were classified as less serious but which occurred with more frequency once these less serious errors are actually resolved and corrected. The research suggests one explanation - that programmers have greater discretion in how and when to resolve these less severe errors. The data supports the hypothesis that errors generate significant software development costs if their resolution requires system redesign. Within the context of the research, it was concluded that uncorrected errors become exponentially more costly with each phase in which they are unresolved, which is consistent with earlier findings in the literature. The research also found that the number of days that a project is open is a log-linear predictor of the number of software errors that will be discovered, implying a bias in error discovery over time. This implies that testing results need to be interpreted in light of the length of testing, and that in practice, tests should take place both before and after systems release.},
	pages = {1--9},
	number = {1},
	journaltitle = {Journal of Systems and Software},
	shortjournal = {J. Syst. Softw.},
	author = {Westland, J. Christopher},
	urldate = {2023-05-08},
	date = {2002-05-01},
	keywords = {economics of information technology, software errors and reliability},
}

@online{noauthor_home_nodate,
	title = {The Home of Scrum},
	url = {https://www.scrum.org/index},
	abstract = {Welcome to the Home of Scrum!™},
	titleaddon = {Scrum.org},
	urldate = {2023-05-12},
	langid = {english},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\LBGTV84U\\www.scrum.org.html:text/html},
}

@book{franklin_advice_1748,
	title = {Advice to a young tradesman},
	volume = {1748},
	publisher = {Philadelphia},
	author = {Franklin, Benjamin},
	date = {1748},
}

@online{noauthor_automapper_nodate,
	title = {{AutoMapper}},
	url = {https://automapper.org/},
	urldate = {2023-05-17},
	file = {AutoMapper:C\:\\Users\\marco\\Zotero\\storage\\TKDL3P7D\\automapper.org.html:text/html},
}

@online{sanjay_implement_2020,
	title = {Implement Automapper in {ASP}.{NET} Core 3.1 - Quick \& Easy Guide {\textbar} Pro Code Guide},
	url = {https://procodeguide.com/programming/automapper-in-aspnet-core/},
	abstract = {This article will cover in detail how to use {AutoMapper} in {ASP}.{NET} Core 3.1 to map objects of dissimilar types without the need to write code},
	author = {{Sanjay}},
	urldate = {2023-05-17},
	date = {2020-06-07},
	langid = {british},
	note = {Running Time: 325
Section: .{NET} Core},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\LUEFUM48\\automapper-in-aspnet-core.html:text/html},
}

@online{xu_ep32_2023,
	title = {{EP}32: {REST} vs. {GraphQL}},
	url = {https://blog.bytebytego.com/p/ep32-how-does-grpc-work},
	shorttitle = {{EP}32},
	abstract = {This week’s system design refresher: {REST} vs. {GraphQL} (Youtube video) How does {gRPC} work? Domain-Driven Design ({DDD}) Data migration with Avro Join {ByteByteGo} Talent {CollectiveThanks} for reading {ByteByteGo} Newsletter! Subscribe for free to receive new posts and support my work.},
	author = {Xu, Alex},
	urldate = {2023-05-18},
	date = {2023-04-19},
	langid = {english},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\YT7YC6MC\\ep32-how-does-grpc-work.html:text/html},
}

@online{noauthor_practitest_nodate,
	title = {{PractiTest} - Test Management Platform to Manage all Your {QA} Efforts},
	url = {https://www.practitest.com/},
	abstract = {End-to-end Test Management tool for test case management. {PractiTest} provides full visibility, clear results, flexibility and integrations with many tools},
	urldate = {2023-05-18},
	langid = {american},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\4EPC6C25\\www.practitest.com.html:text/html},
}
